use rand::Rng;

const DICTIONARY: [&str; 239] = [
    "alieniste",
    "aligne",
    "alignement",
    "aligner",
    "aligot",
    "aligote",
    "aliment",
    "alimentaire",
    "alimentation",
    "alimenter",
    "alinea",
    "alise",
    "alisier",
    "alisme",
    "alitement",
    "aliter",
    "alizarine",
    "alize",
    "alize",
    "alizier",
    "alkekenge",
    "alkyle",
    "allaitement",
    "allaiter",
    "allant",
    "allantoïde",
    "allechant",
    "allecher",
    "allee",
    "allegation",
    "allège",
    "allegeance",
    "allegement",
    "allègement",
    "alleger",
    "allegorie",
    "allegorique",
    "allegoriquement",
    "allègre",
    "allegrement",
    "allègrement",
    "allegresse",
    "allegretto",
    "allegretto",
    "allegro",
    "allegro",
    "alleguer",
    "allèle",
    "allelique",
    "alleluia",
    "allemand",
    "aller",
    "aller et retour",
    "allergène",
    "allergenique",
    "allergie",
    "allergique",
    "allergisant",
    "allergologie",
    "allergologique",
    "allergologiste",
    "allergologue",
    "aller-retour",
    "alleu",
    "alliace",
    "alliage",
    "alliance",
    "allianciste",
    "allie",
    "allier",
    "alligator",
    "alliteration",
    "allium",
    "allo",
    "allo",
    "alloc",
    "allocataire",
    "allocation",
    "allochtone",
    "allocutaire",
    "allocution",
    "allogène",
    "allogreffe",
    "allonge",
    "allonge",
    "allongement",
    "allonger",
    "allopathe",
    "allopathie",
    "allophone",
    "allosexuel",
    "allouer",
    "allumage",
    "allume-cigare",
    "allume-cigarette",
    "allume-feu",
    "allume-gaz",
    "allumer",
    "allumette",
    "allumeur",
    "allumeuse",
    "allure",
    "allusif",
    "allusion",
    "alluvial",
    "alluvion",
    "alluvionnaire",
    "alluvionnement",
    "alluvionner",
    "alma mater",
    "almanach",
    "almandin",
    "almandine",
    "aloès",
    "aloi",
    "alopecie",
    "alors",
    "alose",
    "alouette",
    "alourdir",
    "alourdissement",
    "aloyau",
    "alpaca",
    "alpaga",
    "alpage",
    "alpax",
    "alpe",
    "alpestre",
    "alpha",
    "alphabet",
    "alphabetique",
    "alphabetiquement",
    "alphabetisation",
    "alphabetiser",
    "alphanumerique",
    "alpin",
    "alpinisme",
    "alpiniste",
    "alpiste",
    "alsacien",
    "alstroemère",
    "alstroemeria",
    "alstroemeria",
    "alstromère",
    "alstromeria",
    "alstromeria",
    "altaïque",
    "alter-",
    "alterable",
    "alterant",
    "alteration",
    "altercation",
    "alter ego",
    "alterer",
    "alterite",
    "altermondialisation",
    "altermondialisme",
    "altermondialiste",
    "alternance",
    "alternant",
    "alternateur",
    "alternatif",
    "alternative",
    "alternativement",
    "alterne",
    "alterner",
    "altersexuel",
    "altesse",
    "altier",
    "altimètre",
    "altiport",
    "altise",
    "altiste",
    "altitude",
    "alto",
    "altocumulus",
    "altostratus",
    "altruisme",
    "altruiste",
    "alucite",
    "aluminate",
    "alumine",
    "aluminer",
    "aluminerie",
    "alumineux",
    "aluminium",
    "aluminothermie",
    "alun",
    "alunir",
    "alunissage",
    "alveolaire",
    "alveole",
    "alveole",
    "alveolite",
    "alysse",
    "alysson",
    "alyssum",
    "alzheimer",
    "Am",
    "AM",
    "amabilite",
    "amadou",
    "amadouer",
    "amaigrir",
    "amaigrissant",
    "amaigrissement",
    "amalgamation",
    "amalgame",
    "amalgamer",
    "aman",
    "amancher",
    "amanchure",
    "amande",
    "amandier",
    "amandine",
    "amanite",
    "amant",
    "amarante",
    "amaranthe",
    "amaretto",
    "amaril",
    "amarone",
    "amarrage",
    "amarre",
    "amarrer",
    "amaryllis",
    "amas",
    "amasser",
    "amateur",
    "amateurisme",
    "à maxima",
    "amazone",
    "amazonien",
    "ambages",
    "ambassade",
    "ambassadeur",
    "ambi-",
    "ambiance",
    "ambiant",
];

pub fn find_word(syllable: &str) -> Option<&str> {
    let syllable_upper = syllable;
    let dict_len = DICTIONARY.len();
    let starting_index = rand::thread_rng().gen_range(0..dict_len);

    let is_valid = |word: &str| -> bool {
        if !word.contains(syllable_upper) {
            return false;
        }
        true
    };
    for i in starting_index..dict_len {
        if is_valid(DICTIONARY[i]) {
            return Some(DICTIONARY[i]);
        }
    }
    for i in 0..starting_index {
        if is_valid(DICTIONARY[i]) {
            return Some(DICTIONARY[i]);
        }
    }
    None
}
